version: '3.9'

#services describe the containers that will start
services:
  db:
    image: mongo:7.0.6
    container_name: test-mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
    networks: 
      - "api.network"

  db-client:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USERNAME}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_USERNAME}:${MONGO_PASSWORD}@db:27017/
    depends_on:
      - db
    networks:
      - "api.network"
  
  redis:
    image: redis
    container_name: test-redis
    restart: always
    ports:
      - 6379:6379
    networks: 
      - "api.network"

  # api is the container name for our Go API
  api:
      # It will look for a dockerfile in the project root and build it
      build: "."
      # Exposes the port 5000 from a container and binds it to a random port
      ports:
          - "8080:8080"
      # If the container goes down, it will restart
      restart: "always"
      # Wait for the db to start before starting the api
      depends_on: 
          - db
          - redis
      # Connects the API to a common api.network bridge
      networks: 
          - "api.network"
      # # Starts up replicas of the same image
      # deploy:
      #     replicas: 3

  # # nginx container
  # nginx:
  #     # specifies the latest nginx image
  #     image: nginx:latest
  #     # Connects the conf file of the container to the conf file in our folder
  #     volumes:
  #         - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     # It will start up the nginx only when all api containers have started
  #     depends_on: 
  #         - api
  #     # Connects the port 80 of the nginx container to localhost:80 or localhost
  #     ports: 
  #         - "80:80"
  #     networks: 
  #         - "api.network"

# declares network used to connect all the apps
networks: 
  api.network: