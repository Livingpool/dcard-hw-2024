version: '3.9'

#services describe the containers that will start
services:
  db:
    image: mongo
    container_name: test-mongo
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=pass
    networks: 
      - "api.network"

  db-client:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_MONGODB_URL=mongodb://admin:pass@db:27017/
    depends_on:
      - db
    networks:
      - "api.network"

  # api is the container name for our Go API
  api:
      # It will look for a dockerfile in the project root and build it
      build: "."
      # Exposes the port 5000 from a container and binds it to a random port
      ports:
          - "5000"
      # If the container goes down, it will restart
      restart: "always"
      # Wait for the db to start before starting the api
      depends_on: 
          - db
      # Connects the API to a common api.network bridge
      networks: 
          - "api.network"
      # Starts up 5 replicas of the same image
      deploy:
          replicas: 5

  # nginx container
  nginx:
      # specifies the latest nginx image
      image: nginx:latest
      # Connects the conf file of the container to the conf file in our folder
      volumes:
          - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # It will start up the nginx only when all api containers have started
      depends_on: 
          - api
      # Connects the port 80 of the nginx container to localhost:80 or localhost
      ports: 
          - "80:80"
      networks: 
          - "api.network"

# declares network used to connect all the apps
networks: 
  api.network: